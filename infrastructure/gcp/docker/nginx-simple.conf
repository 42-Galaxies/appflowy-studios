user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/json;

    upstream gotrue_backend {
        server gotrue:9999;
    }

    server {
        listen 80;
        server_name _;
        
        client_max_body_size 50M;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Authentication service proxy
        location /auth/ {
            proxy_pass http://gotrue_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API endpoints (for future backend services)
        location /api/ {
            proxy_pass http://gotrue_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Main page - status information
        location / {
            default_type text/html;
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>AppFlowy Backend Services</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
        h1 { color: #333; }
        .status { background: #f0f0f0; padding: 15px; border-radius: 5px; margin: 20px 0; }
        .service { display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 1px solid #ddd; }
        .service:last-child { border-bottom: none; }
        .running { color: green; font-weight: bold; }
        .info { background: #e7f3ff; padding: 15px; border-radius: 5px; margin: 20px 0; }
        code { background: #f4f4f4; padding: 2px 5px; border-radius: 3px; }
    </style>
</head>
<body>
    <h1>ðŸš€ AppFlowy Backend Services</h1>
    
    <div class="status">
        <h2>Service Status</h2>
        <div class="service"><span>PostgreSQL Database</span><span class="running">âœ“ Running</span></div>
        <div class="service"><span>Redis Cache</span><span class="running">âœ“ Running</span></div>
        <div class="service"><span>GoTrue Authentication</span><span class="running">âœ“ Running</span></div>
        <div class="service"><span>Nginx Proxy</span><span class="running">âœ“ Running</span></div>
    </div>
    
    <div class="info">
        <h2>Available Endpoints</h2>
        <p><strong>Health Check:</strong> <code>/health</code></p>
        <p><strong>Authentication:</strong> <code>/auth/health</code></p>
    </div>
    
    <div class="info">
        <h2>Next Steps</h2>
        <p>The backend infrastructure is ready. To complete your AppFlowy deployment:</p>
        <ol>
            <li>Deploy the AppFlowy frontend application</li>
            <li>Configure Google OAuth for your domain</li>
            <li>Set up SSL certificates with Let\'s Encrypt</li>
        </ol>
    </div>
</body>
</html>';
        }
    }
}
